<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，即内部输出级别为info。可以不设置，
当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="info" monitorInterval="30">
    
    <Properties>
        <!-- 配置日志文件输出目录 -->
        <Property name="LOG_HOME">/usr/local/apache-tomcat-8.5.15/logs</Property>
    </Properties>
    
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
         	<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
            <!-- <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" /> -->
            <PatternLayout pattern="[%d{HH:mm:ss}][%p][%c]%m%n"/>
        </console>
        
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
       <!-- <File name="log" fileName="C:/Users/wangx/Desktop/adminLTE.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>-->
        
          <!--
                %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
                %p : 日志输出格式
                %c : logger的名称
                %m : 日志内容，即 logger.info("message")
                %n : 换行符
                %C : Java类名
                %L : 日志输出所在行数
                %M : 日志输出所在方法名
                hostName : 本地机器名
                hostAddress : 本地ip地址
             -->
        
        
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，
        	则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!-- <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/springboot/springboot.log"
                     filePattern="${sys:user.home}/springboot/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
            控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingFile> -->
    </appenders>
    
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>    
		<!--additivity="false"只在自定义的 Appender中进行输出。-->
		<logger name="org.apache.ibatis" level="DEBUG" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        <logger name="java.sql" level="DEBUG" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        <logger name="com.xmxe" level="DEBUG" additivity="false">
            <appender-ref ref="Console"/>
        </logger>
        
        <root level="debug">
            <appender-ref ref="Console"/>
            <!-- <appender-ref ref="RollingFileInfo"/> -->
        </root>
    </loggers>
</configuration>
<!-- log4j2配置属性详解 https://www.jianshu.com/p/8ded6531ef76 -->