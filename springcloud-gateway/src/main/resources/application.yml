server:
  port: 8087
spring:
  application:
    name: gateway_Service

  devtools:
    #restart:
    #exclude: templates/**,static/** #不重启
    #additional-paths: src/main/java  #重启
    enabled: false #都不重启

  cloud:
    gateway:
      routes:
      - id: 163 #随便起 但要求唯一
        uri: http://www.163.com/
        predicates:
          - Path=/163/**
#        - Host=**.foo.org
#        - Method=GET
#        - Header=X-Request-Id, \d+
#        - Query=foo, ba. #根据请求参数键值对
#        - Query=baz #根据请求参数属性名
#        - Cookie=chocolate, ch.p #根据cookie转发
#        - After=2018-01-20T06:06:06+08:00[Asia/Shanghai] #根据时间确定是否路由 与之相反的是Before 还有Between 两个时间内进行转发
#        - RemoteAddr=192.168.1.1/24 #通过ip路由

      - id: test
        uri: lb://providerService #lb=load balance负载均衡 内部使用ribbon实现
        predicates:
          - Path=/abc/**   #http://localhost:8087/abc/hello_ribbon?name=a 访问providerService服务
        filters:
            - StripPrefix=1  # 去除请求地址中的前一个后缀
#            - PrefixPath=/mypath  #StripPrefix 正相反，是在 URL 路径前面添加前缀
#            - name : RequestRateLimiter  #限流的name必须是RequestRateLimiter
#              nama : Hystrix     #xmxe 熔断路由器
#              name: Retry        #重试路由器
#              args:
#                redis-rate-limiter.replenishRate: 10  #允许用户每秒处理多少个请求
#                redis-rate-limiter.burstCapacity: 20  #令牌桶的容量，允许在一秒钟内完成的最大请求数
#                key-resolver: "#{@ipKeyResolver}"  #使用 SpEL 按名称引用 bean
#                name: fallbackcmd
#                fallbackUri: forward:/incaseoffailureusethis
#                retries: 3  #重试次数，默认值是 3 次
#                statuses: BAD_GATEWAY  #HTTP 的状态返回码 取值请参考：org.springframework.http.HttpStatus
#                methods：指定哪些方法的请求需要进行重试逻辑，默认值是 GET 方法，取值参考：org.springframework.http.HttpMethod
#                series：一些列的状态码配置，取值参考：org.springframework.http.HttpStatus.Series。符合的某段状态码才会进行重试逻辑，默认值是 SERVER_ERROR，值是 5，也就是 5XX(5 开头的状态码)，共有5 个值。
      discovery:
        locator:
          enabled: true  #获取服务名
          lower-case-service-id: true #设置服务名小写，默认false 服务名大写

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8080/eureka/